######
coding
######

0: about this project
=====================

me solving coderun, codeforces, codewars and leetcode problems to 'git gud'.

1.1: project layout
===================

- :code:`root`: The :code:`CMakeLists.txt` and :code:`.command` files are located directly in the root folder.

  - :code:`/bin`: contains the :code:`solution` executable file.

  - :code:`/build`: contains the :code:`cmake` generated build files.

  - :code:`/source`: contains the :code:`solution.cpp` source file.

2: cmake
========

.. code-block::

	cmake_minimum_required(VERSION 3.28)
	project("coding")

	set (CMAKE_CXX_STANDARD 11)

	add_executable(solution 
	  "source/solution.cpp"
	)

	install(TARGETS solution DESTINATION "${PROJECT_SOURCE_DIR}/bin/")

3: build
========

- :code:`solution.command` contains the following:

  - :code:`~/projectRoot rm -rf build/` and :code:`~/projectRoot mkdir build` basically clears the build directory.

  - :code:`cd build`: enters the directory.

  - :code:`cmake ..`: builds the :code:`CMakeLists.txt` located in the parent directory.

  - :code:`make install`: creates the :code:`solution` executable and puts it in the :code:`~/projectRoot/bin` directory.

  - :code:`cd ../bin`: enters the /bin directory.

  - :code:`./solution`: launches the executable.

4: problems
===========

coderun: intro.
---------------

юля, никита и задачи.
~~~~~~~~~~~~~~~~~~~~~

- :code:`001_coderun.cpp` :: :code:`coderun` : :code:`easy` :

  - Подготовка задач к сезону это долгий и кропотливый процесс. Юля знает, что уже готово A задач. Никита выяснил, что ещё B задач почти готовы и в ближайшее время будут добавлены в сезон. Помогите Юле и Никите узнать, сколько всего задач планируется в сезоне.

  - :code:`формат ввода`	: Первая строка содержит два числа *A* и *B* (0 <= *A, B* <= 2 * 10\ :sup:`18`), разделённые пробелом.

  - :code:`формат вывода`	: Выведите одно число - *A* + *B* - суммарное количество задач в сезоне.

  - :code:`ограничения`		: 1 с, 64 мб.

  - :code:`пример 1`		: 1 1 -> 2.

  - :code:`пример 2`		: 4 1 -> 5.

  - :code:`пример 3`		: 1 3 -> 4.

треугольник.
~~~~~~~~~~~~

- :code:`002_coderun.cpp` :: :code:`coderun` : :code:`easy` : :code:`geometry` :

  - Даны три натуральных числа. Возможно ли построить треугольник с такими сторонами? Если это возможно, выведите строку YES, иначе выведите строку NO. Треугольник — это три точки, не лежащие на одной прямой.

  - :code:`формат ввода`	: Вводятся три натуральных числа.

  - :code:`формат вывода`	: Выведите ответ на задачу.

  - :code:`ограничения`		: 1 с, 64 мб.

  - :code:`пример 1`		: 3 4 5 -> YES.

  - :code:`пример 2`		: 3 5 4 -> YES.

  - :code:`пример 3`		: 4 5 3 -> YES.

больше чем соседи.
~~~~~~~~~~~~~~~~~~

- :code:`003_coderun.cpp` :: :code:`coderun` : :code:`easy` : :code:`linear search` :

  - Дан список чисел. Определите, сколько в этом списке элементов, которые больше двух своих соседей. Выведите количество таких элементов.

  - :code:`формат ввода`	: Вводится список чисел. Все числа списка находятся на одной строке.

  - :code:`формат вывода`	: Выведите ответ на задачу.

  - :code:`ограничения`		: 1 с, 64 мб.

  - :code:`пример 1`		: 1 2 3 4 5 -> 0.

  - :code:`пример 2`		: 5 4 3 2 1 -> 0.

  - :code:`пример 3`		: 1 5 1 5 1 -> 0.

выставление тегов
~~~~~~~~~~~~~~~~~

- :code:`004_coderun.cpp` :: :code:`coderun` : :code:`easy` :

  - Большинство задач сезона CodeRun имеют теги, помогающие пользователям выбрать подходящий алгоритм для решения. Известно, что для первой и второй задач каждого трека количество тегов равно 1 (*t* [1]= *t* [2]=1), а для всех следующих количество тегов вычисляется по следующему правилу: *t* [*i*]= *t* [*i* − 1]+ *t* [*i* −2], где *t* [*i*] - количество тегов задачи с номером *i*. Было установлено, что на выставление одного тега требуется одна секунда. Посчитайте, сколько всего времени потребуется для выставления всех тегов.

  - :code:`формат ввода`	: На вход подаётся одно целое число *n* (1 <= *n* <= 35) - количество задач в треке.

  - :code:`формат вывода`	: Выведите одно целое число - сумму *t* [*i*] - время, необходимое для расстановки тегов всех задач.

  - :code:`ограничения`		: 1 с, 64 мб.

  - :code:`пример 1`		: 32 -> 5702866.

  - :code:`пример 2`		: 21 -> 28656.

  - :code:`пример 3`		: 33 -> 9227464.

29 задача аналитики
~~~~~~~~~~~~~~~~~~~

- :code:`005_coderun.cpp` :: :code:`coderun` : :code:`easy` :

  - В трек аналитики второго сезона вошло 28 задач, однако кроме них была подготовлена ещё одна задача. Так как в сезон она не вошла, то предлагаем решить вам её сейчас. Вам дано квадратное уравнение вида: *ax*\ :sup:`2` + *bx* + *c* = 0, где *a*, *b* и *c* - целые числа, такие, что *a* != 0. Напишите программу, которая решает это уравнение.

  - :code:`формат ввода`	: Единственная строка входных данных содержит три целых числа *a*, *b*, *c*(-10\ :sup:`3` <= *a*, *b*, *c* <= 10\ :sup:`3`, a != 0).

  - :code:`формат вывода`	: В первой строке выведите количество корней уравнения. Во второй строке выведите сами корни. Если уравнение имеет два корня, то выведите их через пробел в порядке **возрастания**. Если корень один, то выведите его. Если корней нет, то ничего выводить не нужно. Ваш ответ будет принят, если выведенные числа отличаются от правильных ответов на величину не более 10\ :sup:`-6`.

  - :code:`ограничения`		: 1 с, 64 мб.

  - :code:`пример 1`		:  1 -2  1 -> 1\n1.000000.

  - :code:`пример 2`		:  5  0  3 -> 0.

  - :code:`пример 3`		:  6 -5 -8 -> 2\n-0.810910 1.644243